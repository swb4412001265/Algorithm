class Solution:
    """
    @param: matrix: matrix, a list of lists of integers
    @param: target: An integer
    @return: a boolean, indicate whether matrix contains target
    """
    def searchMatrix(self, matrix, target):
        # write your code here
        if matrix is None or len(matrix) == 0 :
            return False
        tmpList = []
        for i in matrix:
            for j in i:
                tmpList.append(j)
        start = 0
        end = len(tmpList) - 1
        while start + 1 < end:
            mid = int(start + (end - start) / 2)
            if tmpList[mid] < target:
                start = mid
            if tmpList[mid] > target:
                end = mid
            if tmpList[mid] == target:
                return True
                
        if tmpList[start] == target or tmpList[end] == target:
            return True
        return False
            
            
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param matrix: matrix, a list of lists of integers
    @param target: An integer
    @return: a boolean, indicate whether matrix contains target
    """
    def searchMatrix(self, matrix, target):
        # write your code here
        if not matrix:
            return False
        
        y = len(matrix)
        x = len(matrix[0])
        start = 0
        end = x * y - 1
        while start + 1 < end:
            mid = int((start + end) / 2)
            if matrix[int(mid / x)][mid % x ] > target:
                end = mid
            if matrix[int(mid / x)][mid % x] < target:
                start = mid 
            if matrix[int(mid / x)][mid % x ] == target:
                return True
            
        if matrix[int(start / x)][start % x] == target \
            or matrix[int(end / x)][end % x] == target:
            return True
        return False
            
