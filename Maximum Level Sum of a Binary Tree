1161. Maximum Level Sum of a Binary Tree

Given the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on.

Return the smallest level X such that the sum of all the values of nodes at level X is maximal.

Input: [1,7,0,7,-8,null,null]
Output: 2
Explanation: 
Level 1 sum = 1.
Level 2 sum = 7 + 0 = 7.
Level 3 sum = 7 + -8 = -1.
So we return the level with the maximum sum which is level 2.

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def maxLevelSum(self, root: TreeNode) -> int:
        res = -sys.maxsize
        from queue import Queue
        q = Queue()
        q.put(root)
        resLevel = 1
        level = 0
        while not q.empty():
            tmpVal = 0
            level += 1
            for i in range(q.qsize()):
                tmp = q.get()
                tmpVal += tmp.val
                if tmp.left != None:
                    q.put(tmp.left)
                if tmp.right != None:
                    q.put(tmp.right)
            if tmpVal > res:
                resLevel = level
                res = tmpVal
        return resLevel
