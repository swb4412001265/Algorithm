760. Binary Tree Right Side View
中文English
Given a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom

Example
Example 1

Input: {1,2,3,#,5,#,4}
Output: [1,3,4]
Explanation:
   1            
 /   \
2     3         
 \     \
  5     4       
Example 2

Input: {1,2,3}
Output: [1,3]
Explanation:
   1            
 /   \
2     3        

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        vector<int> result;
        vector<vector<int>> allNode;
        queue<TreeNode*> Q;
        if(root == NULL) {
            return result;
        }
        Q.push(root);
        while(!Q.empty()) {
            int size = Q.size();
            vector<int> tmp;
            for(int i = 0; i < size; ++i) {
                TreeNode* tmpNode = Q.front();
                tmp.push_back(tmpNode->val);
                Q.pop();
                if(tmpNode->right != NULL) {
                    Q.push(tmpNode->right);
                }
                if(tmpNode->left != NULL) {
                    Q.push(tmpNode->left);
                }
            }
            allNode.push_back(tmp);
        }
        int allSize = allNode.size();
        for(int i = 0; i < allSize; ++i) {
            result.push_back(allNode[i][0]);
        }
        return result;
    }
};
