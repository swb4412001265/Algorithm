class Solution {
public:
    /** 
     *@param L: Given n pieces of wood with length L[i]
     *@param k: An integer
     *return: The maximum length of the small pieces.
     */
    
      int count(vector<int> L, int target){
            int sum = 0;
            for(int i = 0; i < L.size(); i++){
                sum += L[i] / target;
            }
            return sum;
        }
    
    int woodCut(vector<int> L, int k) {
        // write your code here
        if(L.size() == 0){
            return 0;
        }
        sort(L.begin(),L.end());
        int start = 1;
        int end = L[L.size()-1];
        
        while(start + 1 < end){
            int mid = start + (end - start) / 2;
            if(count(L,mid) >= k){
                start = mid;
            } else {
                end = mid;
            }
        }
        
        if(count(L,end) >= k){
            return end;
        }
        if(count(L,start) >= k){
            return start;
        }
        return 0;
    }
};

*********************************************************************

int sum = k+1;
int target = 1;
while(k < sum){
  int sum = 0;
  for(int i = 0; i<L.size(); i++){
    sum += L[i]/target;
  }
  target++;
}
return target-1;
    
