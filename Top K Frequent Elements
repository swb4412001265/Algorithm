1281. Top K Frequent Elements

Given a non-empty array of integers, return the k most frequent elements.

Example
Example 1:

Input: nums = [1,1,1,2,2,3], k = 2
Output: [1,2]
Example 2:

Input: nums = [1], k = 1
Output: [1]
Notice
You may assume k is always valid, 1 ≤ k ≤ number of unique elements.
Your algorithm's time complexity must be better than O(n log n), where n is the array's size.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param nums: the given array
    @param k: the given k
    @return: the k most frequent elements
    """
    def topKFrequent(self, nums, k):
        # Write your code here
        if not nums:
            return []
        tmpDict = {}
        for i in nums:
            if i not in tmpDict:
                tmpDict[i] = 1
            else:
                tmpDict[i] += 1
        
        import heapq
        h = []
        for i in tmpDict:
            heapq.heappush(h, (-tmpDict[i], i))
        res = []
        for i in range(k):
            val, key = heapq.heappop(h)
            res.append(key)
        return res
