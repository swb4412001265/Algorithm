"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""


class Solution:
    """
    @param: root: The root of the binary search tree.
    @param: A: A TreeNode in a Binary.
    @param: B: A TreeNode in a Binary.
    @return: Return the least common ancestor(LCA) of the two nodes.
    """
    def lowestCommonAncestor(self, root, A, B):
        # write your code here
        if root == None or A == None or B == None:
            return root
        return self.helper(root, A, B)
    def helper(self, root, A, B):
        if root == None:
            return None         
        left = self.helper(root.left, A, B)
        right = self.helper(root.right, A, B)
        if A == root or B == root:
            return root
        if right != None and left != None:
            return root
        if right != None:
            return right
        if left != None:
            return left
        return None
