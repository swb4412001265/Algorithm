
61. Search for a Range
中文English
Given a sorted array of n integers, find the starting and ending position of a given target value.

If the target is not found in the array, return [-1, -1].

Example
Example 1:

Input:
[]
9
Output:
[-1,-1]

Example 2:

Input:
[5, 7, 7, 8, 8, 10]
8
Output:
[3, 4]
Challenge
O(log n) time.

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param A: an integer sorted array
    @param target: an integer to be inserted
    @return: a list of length 2, [index1, index2]
    """
    def searchRange(self, A, target):
        # write your code here
        if not A:
            return [-1, -1]
        if len(A) == 0:
            return [-1, -1]
            
        start = 0
        end = len(A) - 1
        while start + 1 < end:
            mid = int((start + end) / 2)
            if A[mid] > target:
                end = mid
            elif A[mid] < target:
                start = mid
            else:
                end = mid
        res = []
        if A[start] == target:
            res.append(start)
            while start >= 0 and start <= len(A) - 1 and A[start] == target:
                start += 1
            if start == 0:
                res.append(start)
            else:
                res.append(start - 1)
        elif A[end] == target:
            res.append(end)
            while end >= 0 and end <= len(A) - 1 and A[end] == target:
                end += 1
            if end == 0:
                res.append(end)
            else:
                res.append(end - 1)
        else:
            return [-1, -1]
        return res
        
