514. Paint Fence
中文English
There is a fence with n posts, each post can be painted with one of the k colors.
You have to paint all the posts such that no more than two adjacent fence posts have the same color.
Return the total number of ways you can paint the fence.

Example
Example 1:

Input: n=3, k=2  
Output: 6
Explanation:
          post 1,   post 2, post 3
    way1    0         0       1 
    way2    0         1       0
    way3    0         1       1
    way4    1         0       0
    way5    1         0       1
    way6    1         1       0
Example 2:

Input: n=2, k=2  
Output: 4
Explanation:
          post 1,   post 2
    way1    0         0       
    way2    0         1            
    way3    1         0          
    way4    1         1       
Notice
n and k are non-negative integers.
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
    /**
     * @param n non-negative integer, n posts
     * @param k non-negative integer, k colors
     * @return an integer, the total number of ways
     */
    int numWays(int n, int k) {
        // Write your code here
        //define that there are p[n] ways to paint when there are n posts and k colors.
        //vector<int> p;
        int *p = new int[n+1];
        if(k == 1)
            return n;
        if(n == 1)
            return k;
        if(n == 0)
            return 0;
        if(n == 2)
            return k*k;
        p[0] = 0;
        p[1] = k; 
        p[2] = k*k;
        //p[n] only starts to apply no more than 3 posts the same color rule when there are more than 2 posts.
        for(int i = 3;i <= n; i++){
            p[i] = (k-1)*(p[i-1] + p[i-2]);
        }
        return p[n];
    }
};
