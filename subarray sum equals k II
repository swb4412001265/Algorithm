1844. subarray sum equals k II
Given an array of integers and an integer k, you need to find the minimum size of continuous subarrays whose sum equals to k, 
and return its length.

if there are no such subarray, return -1.

Example
Example1

Input: nums = [1,1,1,2] and k = 3
Output: 2
Example2

Input: nums = [2,1,-1,4,2,-3] and k = 3
Output: 2
Notice
the integer nums[i] may lower than 0
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param nums: a list of integer
    @param k: an integer
    @return: return an integer, denote the minimum length of continuous subarrays whose sum equals to k
    """
    def subarraySumEqualsKII(self, nums, k):
        # write your code here
        if not nums:
            return 0
            
        preSum = 0
        tmp_dict = {0: -1}
        diff = sys.maxsize
        for i in range(len(nums)):
            preSum += nums[i]
            if preSum - k in tmp_dict:
                if diff > i - tmp_dict[preSum - k]:
                    diff = i - tmp_dict[preSum - k]
            
            tmp_dict[preSum] = i
        return diff
