112. Remove Duplicates from Sorted List
中文English
Given a sorted linked list, delete all duplicates such that each element appear only once.

Example
Example 1:
	Input:  null
	Output: null


Example 2:
	Input:  1->1->2->null
	Output: 1->2->null
	
Example 3:
	Input:  1->1->2->3->3->null
	Output: 1->2->3->null
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
"""
Definition of ListNode
class ListNode(object):
    def __init__(self, val, next=None):
        self.val = val
        self.next = next
"""

class Solution:
    """
    @param head: head is the head of the linked list
    @return: head of linked list
    """
    def deleteDuplicates(self, head):
        # write your code here
        if head is None:
            return None
        tmp = head
        while head != None and head.next != None:
            if head.val == head.next.val:
                head.next = head.next.next
            else:     
                head = head.next
        return tmp


//////////////////////////Remove Duplicates from Sorted Array////////////////////////
class Solution:
    def removeDuplicates(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if len(nums) is 0:
            return 0
        if len(nums) is 1:
            return 1
        i = 0
        while i < len(nums) - 1:
            if nums[i] == nums[i + 1]:
                nums.pop(i)
            else:
                i += 1
        return len(nums)
        


/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param nums: an array of integers
    @return: the number of unique integers
    """
    def deduplication(self, nums):
        # write your code here
        # hash = {}
        # for i in nums:
        #     if i not in hash:
        #         hash[i] = 0
        #     else:
        #         hash[i] += 1
        # print(len(hash.keys()))
        # return len(list(hash.keys()))
        
       
        
        # index = 0
        # while index < len(nums) - 1:
        #     if nums[index] == nums[index + 1]:
        #         nums.pop(index)
        #     else:
        #         index += 1
        # return len(nums)
        if nums == [] or len(nums) == 1:
            return len(nums)
        nums.sort()
        i = 0
        j = 0
        while j < len(nums):
            if nums[i] == nums[j]:
                j += 1
            else:
                i += 1
                nums[i] = nums[j]
                j += 1
        return i + 1
                
