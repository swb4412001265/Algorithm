Given an array of integers, find how many unique pairs in the array such that their sum is equal to a specific target number. Please return the number of pairs.
给一整数数组, 找到数组中有多少组 不同的元素对 有相同的和, 且和为给出的 target 值, 返回对数.
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
    /**
     * @param nums an array of integer
     * @param target an integer
     * @return an integer
     */
    int twoSum6(vector<int> &nums, int target) {
        // Write your code here
        if(nums.size() == 0) {
            return 0;
        }
        unordered_map<int, int> hash;
        unordered_set<int> S;
        for(int i = 0; i < nums.size(); ++i) {
            if(hash.find(target - nums[i]) == hash.end()) {
                hash.insert({nums[i], i}); //can not change it to hash[nums[i]] = i, since this means replace the old value with new value
                //But insert means do not put new item into hash if key value exists
            } else {
                //unordered_map<int, int>::iterator it = hash.find(target - nums[i]);
                //if not commend it out, it will time out
                S.insert(hash.find(target - nums[i])->second);
            }
        }
        return S.size();
    }
};

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param nums: an array of integer
    @param target: An integer
    @return: An integer
    """
    def twoSum6(self, nums, target):
        if not nums or len(nums) < 2:
            return 0

        nums.sort()
        
        count = 0
        left, right = 0, len(nums) - 1
        
        while left < right:
            if nums[left] + nums[right] == target:
                count += 1
                while left < right and nums[right] == nums[right - 1]:
                    right -= 2
                while left < right and nums[left] == nums[left + 1]:
                    left += 2
            elif nums[left] + nums[right] > target:
                right -= 1
            else:
                left += 1
        
        return count
