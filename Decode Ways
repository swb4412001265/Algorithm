
512. Decode Ways
中文English
A message containing letters from A-Z is being encoded to numbers using the following mapping:

'A' -> 1
'B' -> 2
...
'Z' -> 26
Given an encoded message containing digits, determine the total number of ways to decode it.

Example
Example 1:

Input: "12"
Output: 2
Explanation: It could be decoded as AB (1 2) or L (12).
Example 2:

Input: "10"
Output: 1

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param s: a string,  encoded message
    @return: an integer, the number of ways decoding
    """
    def numDecodings(self, s):
        # write your code here
        #define f[n] as there are f[n] ways to decode when message length is n
        if not s:
            return 1
        if len(s) == 1:
            return 
        f = [0 for _ in range(len(s))]
        f[0] = 1
        f[1] = 1
        for i in range(2, len(s) + 1):
            if int(s[i-1]) == 0:
                f[i] = f[i - 2]
            elif int(s[i-2,i]) >26 or int(s[i-2,i]) < 10:
                f[i] = f[i - 1]
            else:
                f[i] = f[i - 1] + f[i -2]
        return f[len(s)]        
        
