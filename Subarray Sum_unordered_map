class Solution {
public:
    /**
     * @param nums: A list of integers
     * @return: A list of integers includes the index of the first number 
     *          and the index of the last number
     */
    vector<int> subarraySum(vector<int> nums){
        // write your code here
        //sum - PreSum = 0
        unordered_map<int, int> hash;
        vector<int> result;
        if(nums.size() == 0) {
            return result;
        }
        int sum = 0;
        hash[0] = -1;//for the index start from 0
        for(int i = 0; i < nums.size(); ++i) {
            sum += nums[i];
            if(hash.find(sum) == hash.end()) {
                hash[sum] = i;
            } else {    
                result.push_back(hash[sum] + 1);
                result.push_back(i);
                break;
            }
        }
        return result;
    }
};
