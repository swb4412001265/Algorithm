638. Isomorphic Strings
中文English
Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

Example
Example 1:

Input : s = "egg", t = "add"
Output : true 
Explanation : 
e -> a, g -> d.
Example 2:

Input : s = "foo", t = "bar"
Output : false
Explanation : 
No solution.
Example 3:

Input : s = "paper", t = "title"
Output : true 
Explanation : 
p -> t, a -> i, e -> l, r -> e.
Notice
You may assume both s and t have the same length.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param s: a string
    @param t: a string
    @return: true if the characters in s can be replaced to get t or false
    """
    def isIsomorphic(self, s, t):
        # write your code here
        # both s can convert to t and t can convert to s
        # if there is only one side, this case will be true as well: "egg" "ddd"
        if len(s) != len(t):
            return False
        hash = {}
        for i in range(len(s)):
            if s[i] in hash:
                if hash[s[i]] != t[i]:
                    return False
            else:
                hash[s[i]] = t[i]
        
        hash = {}
        for i in range(len(t)):
            if t[i] in hash:
                if hash[t[i]] != s[i]:
                    return False
            else:
                hash[t[i]] = s[i]
        
        return True
