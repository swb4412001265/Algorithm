76. Longest Increasing Subsequence
中文English
Given a sequence of integers, find the longest increasing subsequence (LIS).

You code should return the length of the LIS.

Example
Example 1:
	Input:  [5,4,1,2,3]
	Output:  3
	
	Explanation:
	LIS is [1,2,3]


Example 2:
	Input: [4,2,4,5,3,7]
	Output:  4

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
    /**
     * @param nums: The integer array
     * @return: The length of LIS (longest increasing subsequence)
     */
    int longestIncreasingSubsequence(vector<int> nums) {
        // write your code here
        int m = nums.size();
        if (m == 0) {
            return 0;
        }
        //define f[i] as the longest increasing subsequence from index 0 to i
        vector<int> f(m, 1);
        int MAX = INT_MIN;
        for(int i = 1; i < m; ++i) {
            for (int j = 0; j < i; ++j) {
                if(nums[i] > nums[j]) {
                    f[i] = max(f[j] + 1, f[i]);
                }
            }
            MAX = max(f[i], MAX);
        }
        return MAX;
    }
};

///////////////////////////////////////////python///////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param nums: An integer array
    @return: The length of LIS (longest increasing subsequence)
    """
    def longestIncreasingSubsequence(self, nums):
        # write your code here
        # define f[n] as the length of the longest increasing subsequence
        # from index 0 to i
        # f[n] = max(f[n - 1] + 1, f[n])
        
        if not nums:
            return 0
        
        f = [1 for _ in range(len(nums))]
        res = 1
        for i in range(1, len(nums)):
            for j in range(i):
                if nums[i] > nums[j]:
                    f[i] = max(f[j] + 1, f[i])
            res = max(res, f[i])
        return res            
        


////////////////////longest increasing consecutive subsequence///////////////////////////////////////////////////////
int count = 1;
int result = INT_MIN;
for(int i = 0; i < m - 1; ++i) {
  if （nums[i] < nums[i + 1]) {
    count++;    
  } else {
    result = max(count, result);
    count = 1;
  }
}
return result;
  
