1095. Maximum Swap
Given a non-negative integer, you could swap two digits at most once to get the maximum valued number. Return the maximum valued number you could get.

Example
Example 1:

Input: 2736
Output: 7236
Explanation: Swap the number 2 and the number 7.
Example 2:

Input: 9973
Output: 9973
Explanation: No swap.
Notice
The given number is in the range [0, 10^8]


/////////////////////////////Need more work/////////////////////////////////////
class Solution:
    """
    @param num: a non-negative intege
    @return: the maximum valued number
    """
    def maximumSwap(self, num):
        # Write your code here
        num = str(num)
        tmp = []
        m = 0
        index = 0
        for i in range(len(num)):
            if int(num[i]) > m:
                m = int(num[i])
                index = i
            tmp.append(num[i])
        if index != 0:
            tmp[0], tmp[index] = tmp[index], tmp[0]
            res = "".join(tmp)
            res = int(res)
            return res
        else:
            
            return num
////////////////////////////////////////////////暴力解法  枚举所有可能/////////////////////////////////////////////////////////////
class Solution:
    def maximumSwap(self, num):
        res, num = num, list(str(num))
        for i in range(len(num) - 1):
            for j in range(i + 1, len(num)):
                if int(num[j]) > int(num[i]):
                    tmp = int("".join(num[:i] + [num[j]] + num[i + 1:j] + [num[i]] + num[j + 1:]))
                    res = max(res, tmp)
        return res
