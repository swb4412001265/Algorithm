5. Kth Largest Element
中文English
Find K-th largest element in an array.

Example
Example 1:

Input:
n = 1, nums = [1,3,4,2]
Output:
4
Example 2:

Input:
n = 3, nums = [9,3,2,4,8]
Output:
4
Challenge
O(n) time, O(1) extra memory.

Notice
You can swap elements in the array



////////////////////////////////////////////////////////////////////////////////O(n)////////////////////////////////////
class Solution {
public:
    /*
     * param k : description of k
     * param nums : description of array and index 0 ~ n-1
     * return: description of return
     */
    int kthLargestElement(int k, vector<int> nums) {
        // write your code here
        if(nums.size() == 0) {
            return -1;
        }
        return quickSelect(nums, 0, nums.size() - 1, k);
    }
    
    int quickSelect(vector<int> &nums, int start, int end, int k) {
        if(start >= end) {
            return nums[start];
        }
        int left = start;
        int right = end;
        int pivot = nums[(start + end) / 2];
        
        while(left <= right) {
            while(left <= right && nums[left] > pivot) {
                left++;
            }
            while(left<=right && nums[right] < pivot) {
                right--;
            }
            if(left <= right) {
                int tmp = nums[left];
                nums[left] = nums[right];
                nums[right] = tmp;
                left++;
                right--;
            }
        }
        if(start + k - 1 <= right) {
            return quickSelect(nums, start, right, k);
        }
        if(start + k - 1 >= left) {
            return quickSelect(nums, left, end, k - (left - start));
        }
        return nums[right + 1];
    }
};
