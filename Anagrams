171. Anagrams
ä¸­æ–‡English
Given an array of strings, return all groups of strings that are anagrams.

Example
Example 1:

Input:["lint", "intl", "inlt", "code"]
Output:["lint", "inlt", "intl"]
Example 2:

Input:["ab", "ba", "cd", "dc", "e"]
Output: ["ab", "ba", "cd", "dc"]
Challenge
What is Anagram?

Two strings are anagram if they can be the same after change the order of characters.
Notice
All inputs will be in lower-case

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution:
    """
    @param strs: A list of strings
    @return: A list of strings
    """
    def anagrams(self, strs):
        # write your code here
        if not strs:
            return []
        hash = {}
        res = []
        for i in range(len(strs)):
            if str(sorted(strs[i])) not in hash:
                hash[str(sorted(strs[i]))] = [strs[i]]
            else:
                hash[str(sorted(strs[i]))].append(strs[i])
        
        for i, j in hash.items():
            if len(j) >= 2:
                res += j
        return res
            
