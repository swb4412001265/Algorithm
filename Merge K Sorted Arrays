486. Merge K Sorted Arrays
中文English
Given k sorted integer arrays, merge them into one sorted array.

Example
Example 1:

Input: 
  [
    [1, 3, 5, 7],
    [2, 4, 6],
    [0, 8, 9, 10, 11]
  ]
Output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]
Example 2:

Input:
  [
    [1,2,3],
    [1,2]
  ]
Output: [1,1,2,2,3]
Challenge
Do it in O(N log k).

N is the total number of integers.
k is the number of arrays.

/////////////////////////////////////////////////////DC//////////////////////////////////////////////////////
class Solution:
    """
    @param arrays: k sorted integer arrays
    @return: a sorted array
    """
    def mergekSortedArrays(self, arrays):
        # write your code here
        if not arrays:
            return []
        return self.divide(arrays, 0, len(arrays) - 1)    
    
    def divide(self, arrays, start, end):
        if start == end:
            return arrays[start]
        mid = (start + end) // 2    
        left = self.divide(arrays, start, mid)
        right = self.divide(arrays, mid + 1, end)
        return self.mergeTwoSortedArray(left, right)
    
    def mergeTwoSortedArray(self, arr1, arr2):
        res = []
        i = 0
        j = 0
        
        while i < len(arr1) and j < len(arr2):
            if arr1[i] < arr2[j]:
                res.append(arr1[i])
                i += 1
            else:
                res.append(arr2[j])
                j += 1
        while i < len(arr1):
            res.append(arr1[i])
            i += 1
        while j < len(arr2):
            res.append(arr2[j])
            j += 1
        return res
            
//////////////////////////////////////////////////O(nlogk)///////////////////////////////////////////

class Solution:
    """
    @param arrays: k sorted integer arrays
    @return: a sorted array
    """
    def mergekSortedArrays(self, arrays):
        # write your code here
        if not arrays:
            return []
        while len(arrays) > 1:
            tmpList = []
            for i in range(0, len(arrays), 2):
                if i + 1 < len(arrays):
                    tmpList.append(self.mergeTwoSortedArray(arrays[i], arrays[i + 1]))
                else:
                    tmpList.append(arrays[-1])
            arrays = tmpList
        return arrays[0]        
                
    
    def mergeTwoSortedArray(self, arr1, arr2):
        res = []
        i = 0
        j = 0
        
        while i < len(arr1) and j < len(arr2):
            if arr1[i] < arr2[j]:
                res.append(arr1[i])
                i += 1
            else:
                res.append(arr2[j])
                j += 1
        while i < len(arr1):
            res.append(arr1[i])
            i += 1
        while j < len(arr2):
            res.append(arr2[j])
            j += 1
        return res
            
//////////////////////////////////////////////////heapq/////////////////////////////////////////////////////////////////
class Solution:
    """
    @param arrays: k sorted integer arrays
    @return: a sorted array
    """
    def mergekSortedArrays(self, arrays):
        # write your code here
        import heapq
        heap = []
        res = []
        for index, array in enumerate(arrays):
            if array:
                heapq.heappush(heap, (array[0], index, 0))
            
        while heap:
            tmp = heapq.heappop(heap)
            res.append(tmp[0])
            if tmp[2] + 1 < len(arrays[tmp[1]]):
                heapq.heappush(heap, (arrays[tmp[1]][tmp[2] + 1], tmp[1], tmp[2] + 1))
        return res
