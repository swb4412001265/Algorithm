class Solution {
public:    
    /**
     * @param numbers: Give an array numbers of n integer
     * @param target: An integer
     * @return: return the sum of the three integers, the sum closest target.
     */
    int threeSumClosest(vector<int> nums, int target) {
        // write your code here
        if(nums.size() == 0) {
            return 0;
        }
        int diff = INT_MAX;
        int sum;
        sort(nums.begin(), nums.end());
        for(int i = 0; i <= nums.size() - 3; ++i) {
            if(sum == target) {
                break;
            }
            if(i > 0 && nums[i] == nums[i - 1]) {
                continue;
            }
            //int target = nums[i];
            int start = i + 1;
            int end = nums.size() - 1;
            while(start < end) {
                if(start > i + 1 && nums[start] == nums[start - 1]) {
                    start++;
                    continue;
                }
                if(nums[start] + nums[end] + nums[i] == target) {
                    sum = nums[start] + nums[end] + nums[i];
                    break;
                } else if(nums[start] + nums[end] + nums[i]> target) {
                    if(nums[start] + nums[end] + nums[i] - target < diff) {
                        diff = nums[start] + nums[end] + nums[i] - target;
                        sum = nums[start] + nums[end] + nums[i];
                    }
                    end--;
                } else {
                    if(target - nums[start] - nums[end] - nums[i] < diff) {
                        diff = target - nums[start] - nums[end] - nums[i];
                        sum = nums[start] + nums[end] + nums[i];
                    }
                    start++;
                }
            }
        }
        return sum;
    }
};
