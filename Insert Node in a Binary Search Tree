85. Insert Node in a Binary Search Tree
中文English
Given a binary search tree and a new tree node, insert the node into the tree. You should keep the tree still be a valid binary search tree.

Example
Example 1:
	Input:  tree = {}, node = 1
	Output:  1
	
	Explanation:
	Insert node 1 into the empty tree, so there is only one node on the tree.

Example 2:
	Input: tree = {2,1,4,3}, node = 6
	Output: {2,1,4,3,6}
	
	Explanation: 
	Like this:



	  2             2
	 / \           / \
	1   4   -->   1   4
	   /             / \ 
	  3             3   6
		
Challenge
Can you do it without recursion?

Notice
You can assume there is no duplicate values in this tree + node.

//////////////////////////////////////////////////////////////Note//////////////////////////////////////////////////////////
"""
Definition of TreeNode:
class TreeNode:
    def __init__(self, val):
        self.val = val
        self.left, self.right = None, None
"""


class Solution:
    """
    @param: root: The root of the binary search tree.
    @param: node: insert this node into the binary search tree
    @return: The root of the new binary search tree.
    """
    def insertNode(self, root, node):
        # write your code here
        if root == None:
            return node
        tmpNode = root
        while tmpNode != node:
            if tmpNode.val > node.val:
                if tmpNode.left == None:
                    tmpNode.left = node
                tmpNode = tmpNode.left
            else:
                if tmpNode.right == None:
                    tmpNode.right = node
                tmpNode = tmpNode.right
        return root
