994. Contiguous Array
中文English
Given a binary array, find the maximum length of a contiguous subarray with equal number of 0 and 1.

Example
Example 1:

Input: [0,1]
Output: 2
Explanation: [0, 1] is the longest contiguous subarray with equal number of 0 and 1.
Example 2:

Input: [0,1,0]
Output: 2
Explanation: [0, 1] (or [1, 0]) is a longest contiguous subarray with equal number of 0 and 1.
Notice
The length of the given binary array will not exceed 50,000.

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#change 0 to -1, so when the number of 0 and 1 is equal means the prefix sum is equal 0

class Solution:
    """
    @param nums: a binary array
    @return: the maximum length of a contiguous subarray
    """
    def findMaxLength(self, nums):
        # Write your code here
        for i in range(len(nums)):
            if nums[i] == 0:
                nums[i] = -1
        prefixSum = 0
        res = 0
        prefixSumSet = {0: -1}
        for i in range(len(nums)):
            prefixSum += nums[i]
            if prefixSum in prefixSumSet:
                res = max(res, i - prefixSumSet[prefixSum])
            else:
                prefixSumSet[prefixSum] = i
        return res
