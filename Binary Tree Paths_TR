/**
 * Definition of TreeNode:
 * class TreeNode {
 * public:
 *     int val;
 *     TreeNode *left, *right;
 *     TreeNode(int val) {
 *         this->val = val;
 *         this->left = this->right = NULL;
 *     }
 * }
 */
class Solution {
public:
    /**
     * @param root the root of the binary tree
     * @return all root-to-leaf paths
     */
     
    void help(TreeNode* root, string tmp, vector<string> &result){
        if(root == NULL){
            return;
        }
        tmp += to_string(root->val);
        
        if(root->left == NULL && root->right == NULL){
            result.push_back(tmp);    
        }
        if(root->left != NULL)      //can be removed
        help(root->left, tmp + "->", result);   //非叶子结点时，运行递归
        if(root->right != NULL)     //can be removed
        help(root->right, tmp + "->", result);
        
    } 
    vector<string> binaryTreePaths(TreeNode* root) {
        // Write your code here
        vector<string> result;
        if(root == NULL){
            return result;
        }
        help(root, "", result);
        return result;
    }
};
