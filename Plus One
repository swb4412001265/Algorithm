Given a non-negative number represented as an array of digits, plus one to the number.

The digits are stored such that the most significant digit is at the head of the list.

Have you met this question in a real interview? Yes
Example
Given [1,2,3] which represents 123, return [1,2,4].

Given [9,9,9] which represents 999, return [1,0,0,0].


#############################To Be Continue################################


class Solution:
    """
    @param: digits: a number represented as an array of digits
    @return: the result
    """
    def plusOne(self, digits):
        tmp = []
        self.helper(digits, tmp)
        return tmp
    
    
    def helper(self, digits, result):
        # write your code here
        # result = []
        # if digits == []:
        #     return result
        
        
        if digits[-1] + 1 < 10:
            for i in digits:
                result.append(i)
            result[-1]  = result[-1] + 1   
            return result
        else:
            result[-1] = 0
            if len(digits) - 1 > 0:
                self.helper(result[0:len(digits) - 1])
            else:
                self.helper([0])


############################################Answer######################################################
class Solution:
    """
    @param: digits: a number represented as an array of digits
    @return: the result
    """
    def plusOne(self, digits):
        if digits == []:
            return [1]
        # result = digits
        for i in range(len(digits) - 1, -1, -1):
            if digits[i] + 1 < 10:
                digits[i]  = digits[i] + 1   
                return digits
            else:
                digits[i] = 0
        # if digits[0] == 0:
        digits[0] = 1
        digits.append(0)
        return digits
