1666. Combination and judgment prime number
cat-only-icon
CAT Only
中文English
Give n integers and an integer k, you can choose k integers in the n integers and add them up, now let you calculate how many ways that the sum of the k integers is a prime number.

Example
Give a=[3,7,12,19], k=3, return 1

Explanation:
There are 4 ways
3＋7＋12=22　　3＋7＋19＝29　　7＋12＋19＝38　　3＋12＋19＝34, and only 29 is a prime.
Give a=[1,2,3], k=2, return 2

Explanation:
There are 3 ways
1 + 2 = 3         1 + 3 = 4      2 + 3 =5
and only 3 and 5 are primes.
Notice
n does not exceed 1010
k does not exceed n

/////////////////////////To be Continue//////////////////
class Solution:
    """
    @param a: the n numbers
    @param k: the number of integers you can choose
    @return: how many ways that the sum of the k integers is a prime number
    """
    def getWays(self, a, k):
        # Write your code here
        self.count = 0
        visited = []
        b = [False] * len(a)
        self.allCom(a, k, 0, [], visited,b)
        return self.count
            
    def allCom(self, a, k, i, tmp, visited, b):
        if len(tmp) == 4 and self.isPrime(sum(tmp)):
            tmp.sort()
            if tmp.sort not in visited:
                print(tmp)
                visited.append(tmp)
                self.count += 1
        for x in range(i, len(a)):
            if b[i] == True:
                continue
            tmp.append(a[x])
            b[x] = True
            self.allCom(a, k, i + 1, tmp, visited, b)
            tmp.pop()
            b[x] = False        
    def isPrime(self, num):
        if num == 1:
            return True
        for i in range(2, num):
            if num % i == 0:
                return False
        return True
