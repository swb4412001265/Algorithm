642. Moving Average from Data Stream
中文English
Given a stream of integers and a window size, calculate the moving average of all integers in the sliding window.

Example
Example 1:

MovingAverage m = new MovingAverage(3);
m.next(1) = 1 // return 1.00000
m.next(10) = (1 + 10) / 2 // return 5.50000
m.next(3) = (1 + 10 + 3) / 3 // return 4.66667
m.next(5) = (10 + 3 + 5) / 3 // return 6.00000

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class MovingAverage(object):
    """
    @param: size: An integer
    """
    def __init__(self, size):
        # do intialization if necessary
        self.size = size
        self.tmp = []
        self.res = 0
       
    """
    @param: val: An integer
    @return:  
    """
    def next(self, val):
        # write your code here
        self.tmp.append(val)
        if len(self.tmp) <= self.size:
            self.res += val
            return self.res / len(self.tmp)
        else:
            self.res += val
            self.res -= self.tmp[-1 - self.size]
            return self.res / self.size
            

# Your MovingAverage object will be instantiated and called as such:
# obj = MovingAverage(size)
# param = obj.next(val)
