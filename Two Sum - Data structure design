////////////////////////////////////////O(nlogn)////////////////////////////////////////////////////////////////

class TwoSum {
public:

    // Add the number to an internal data structure.
    vector<int> array;
    void add(int number) {
        // Write your code here
        array.push_back(number);
        return;
    }

    // Find if there exists any pair of numbers which sum is equal to the value.
    bool find(int value) {
        // Write your code here
        sort(array.begin(), array.end());
        int start = 0;
        int end = array.size() - 1;
        int flag = false;
        while(start < end) {
            if(array[start] + array[end] > value) {
                end--;
            } 
            if(array[start] + array[end] < value) {
                start++;
            }
            if(array[start] + array[end] == value) {
                flag = true;
                break;
            }
        }
        return flag;
    }
};

// Your TwoSum object will be instantiated and called as such:
// TwoSum twoSum;
// twoSum.add(number);
// twoSum.find(value);


////////////////////////////////////////////////////Time: O(n) + Space: O(n)///////////////////////////////////////////////////////
class TwoSum {
public:

    // Add the number to an internal data structure.
    vector<int> array;
    void add(int number) {
        // Write your code here
        array.push_back(number);
        return;
    }

    // Find if there exists any pair of numbers which sum is equal to the value.
    bool find(int value) {
        // Write your code here
        unordered_set<int> hash;
        for(int i = 0; i < array.size(); ++i) {
            if(hash.find(value - array[i]) == hash.end()) {
                hash.insert(array[i]);
            } else {
                return true;
            }
        }
        return false;
    }
};


//////////////////////////////////Python Exceed Time Limit//////////////////////////////////////////////

class TwoSum:
    """
    @param: number: An integer
    @return: nothing
    """
    x = []
    def add(self, number):
        # write your code here
        # self.x = []
        self.x.append(number)

    """
    @param: value: An integer
    @return: Find if there exists any pair of numbers which sum is equal to the value.
    """
    def find(self, value):
        # write your code here
        import copy
        for i in range(len(self.x)):
            tmp = copy.deepcopy(self.x)
            tmpVal = value - tmp[i]
            tmp.remove(tmp[i])
            # print tmp
            if tmpVal in tmp:
                return True
        return False
