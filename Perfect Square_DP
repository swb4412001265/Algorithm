513. Perfect Squares
中文English
Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.

Example
Example 1:

Input: 12
Output: 3
Explanation: 4 + 4 + 4
Example 2:

Input: 13
Output: 2
Explanation: 4 + 9

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
class Solution {
public:
    /**
     * @param n a positive integer
     * @return an integer
     */
    int numSquares(int n) {
        // Write your code here
        //define f[i] as there are how many least number and the sum of these number will be i
        vector<int> f(n+1, INT_MAX);
        f[0] = 0;
        f[1] = 1;
        f[2] = 2;
        f[3] = 3;
        f[4] = 1;
        for(int i = 5; i <= n ; ++i) {
            for(int j = 1; j*j <= i; ++j) {
                f[i] = min(f[i - j*j] + 1, f[i]);
            }
        }
        return f[n];
    }
};


/////////////////////////////////////////////////////python//////////////////////////////////////////////////////////////////
class Solution:
    """
    @param n: a positive integer
    @return: An integer
    """
    def numSquares(self, n):
        # write your code here
        #define f[n] as there is the least number of square number
        f = [n + 1 for _ in range(n + 1)]
        
        # f[0] = 0
        # f[1] = 1
        # f[2] = 2
        # f[3] = 3
        # f[4] = 1
        
        if n == 0:
            return 0
        else:
            f[0] = 0
        if n == 1:
            return 1
        else:
            f[1] = 1
        if n == 2:
            return 2
        else:
            f[2] = 2
        if n == 3:
            return 3
        else:
            f[3] = 3
        if n == 4:
            return 1
        else:
            f[4] = 1
        
        for i in range(5, n + 1):
            j = 1
            while i >= j * j:
                f[i] = min(f[i - j*j] + 1, f[i])
                j += 1
        return f[n]
