1562. Number of restaurants
Give a List of data representing the coordinates[x,y] of each restaurant and the customer is at the origin[0,0]. Find the n restaurants closest to the customer firstly. Then you need to pick n restaurants which appeare firstly in the List and the distance between the restaurant and the customer can't more than the longest distance in the n closest restaurants. Return their coordinates in the original order.

Example
Given : n = 2 , List = [[0,0],[1,1],[2,2]]
Return : [[0,0],[1,1]]
Given : n = 3,List = [[0,1],[1,2],[2,1],[1,0]]
Return :[[0,1],[1,2],[2,1]]
Notice
1.Coordinates in range [-1000,1000]
2.n>0
3.No same coordinates

////////////////////////////////////Version 1//////////////////////////////////////////////////////
User is at [0,0] and not moving; so check the distance of all the resturant
class Solution:
    """
    @param restaurant: 
    @param n: 
    @return: nothing
    """
    def nearestRestaurant(self, restaurant, n):
        # Write your code here
        # from queue import Queue
        # q = Queue()
        if restaurant == None or len(restaurant) == 0:
            return []
        tmp = {}
        for x in range(len(restaurant)):
            tmp[x] = restaurant[x][0]**2 + restaurant[x][1]**2
        print(tmp)
        tmp = sorted(tmp.items(), key=lambda x: x[1])
        print(tmp)
        res = []
        flag = 0
        for key, val in tmp:
            if flag < n:
                res.append(restaurant[key])
                flag += 1
            else:
                break
        return res
        
        
     ////////////////////////////////////////Version 2/////////////////////////////////////////////////
